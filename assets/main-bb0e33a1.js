import{O as a}from"./index-08366f59.js";function B(e,t){const n=window.matchMedia("(prefers-color-scheme: dark)"),u=n.matches?"dark":"light",i=n.matches?"light":"dark";for(var d=0;d<t.styleSheets.length;d++)for(var m=0;m<t.styleSheets[d].cssRules.length;m++){let r=t.styleSheets[d].cssRules[m];r&&r.media&&r.media.mediaText.includes("prefers-color-scheme")&&(e==="LIGHT"?(r.media.appendMedium(`(prefers-color-scheme: ${u})`),r.media.mediaText.includes(i)&&r.media.deleteMedium(`(prefers-color-scheme: ${i})`)):e==="DARK"&&(r.media.appendMedium(`(prefers-color-scheme: ${i})`),r.media.mediaText.includes(u)&&r.media.deleteMedium(`(prefers-color-scheme: ${u})`)))}}class s{static EXTENSIONID="com.battle-system.ticker";static BROADCASTID="com.battle-system.ticker-broadcast";static AUXCHANNELID="com.battle-system.ticker-auxcast";static APPELEMENT=document.getElementById("app");static TEMPPLAYERFACE=`
        <div id="activeTimer"></div>
        <div id="inactiveTimer" class="timerHidden">Not Running</div>
        `;static GMINTERFACE=`
    <table>
        <colgroup>
            <col span="1" style="width: 25%;">
            <col span="1" style="width: 25%;">
            <col span="1" style="width: 25%;">
            <col span="1" style="width: 25%;">
        </colgroup>
        <tr>
            <td colspan="4" rowspan="2">
                <div id="timerArea">0:00</div>
            </td>
        </tr>
        <tr></tr>
        <tr>
            <td colspan="2"><div id="tenSecButton" class="time-button">+/- 10S</div></td>
            <td colspan="2"><div id="oneMinButton" class="time-button">+/- 1M</div></td>
        </tr>
        <tr>
            <td colspan="2"><div id="fiveMinButton" class="time-button">+/- 5M</div></td>
            <td colspan="2"><div id="tenMinButton" class="time-button">+/- 10M</div></td>
        </tr>
        <tr>
            <td><button id="pauseButton" class="toggle-button"><img class="svg discord" src="/pause.svg" /></button></td>
            <td colspan="2"><button id="startButton" class="toggle-button"><img class="svg discord" src="/play.svg" /></button></td>
            <td><button id="resetButton" class="toggle-button"><img class="svg discord" src="/reset.svg" /></button></td>
        </tr>
        <tr>
            <td colspan="3">
                <div id="slideToggle">
                    <label class="toggle">
                        <span id="visibleLabel" class="toggle-label">Visible</span>
                        <input id="visibleToggle" class="toggle-checkbox" type="checkbox" checked>
                        <div class="toggle-switch"></div>
                    </label>
                </div>
            </td>
            <td><div id="whatsNew"></div></td>
        </tr>
    </table>`;static DING="data:audio/mpeg;base64,"}async function b(){await a.action.setBadgeText(void 0),await a.action.setBadgeBackgroundColor("#BB99FF")}async function c(e){if(!await a.action.isOpen()){await a.action.setBadgeText(e);const n=A.CurrentTheme==="DARK"?"yellow":"#159cc5";await a.action.setBadgeBackgroundColor(n)}}async function p(){await a.action.isOpen()||(await a.action.setBadgeText("Time's Up!"),await a.action.setBadgeBackgroundColor("red"))}function q(e){return`
    <div class="get-hourglass">
    <svg width="50px" height="60px" viewBox="0 0 14 18">
    <defs>
    </defs>
    <g id="sandclock" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">
        <path d="M13.0986667,16.465 L12.7226667,16.465 C12.6796667,16.031 12.5996667,15.6073333 12.4886667,15.1963333 C12.084,13.6953333 11.269,12.3646667 10.352,11.3396667 C9.52833333,10.4183333 8.623,9.74333333 7.859,9.41433333 C7.859,9.41433333 7.56766667,9.20133333 7.56766667,8.97866667 C7.56766667,8.75633333 7.859,8.54533333 7.859,8.54533333 C9.687,7.74033333 12.3786667,4.93333333 12.7223333,1.50133333 L13.0986667,1.50133333 C13.5006667,1.50133333 13.8266667,1.17533333 13.8266667,0.773666667 C13.8266667,0.371666667 13.5006667,0.0456666667 13.0986667,0.0456666667 L0.776,0.0456666667 C0.374,0.0456666667 0.048,0.371666667 0.048,0.773666667 C0.048,1.17533333 0.374,1.50133333 0.776,1.50133333 L1.152,1.50133333 C1.49233333,4.93666667 4.15866667,7.745 6.00533333,8.54733333 C6.00533333,8.54733333 6.31133333,8.737 6.31133333,8.97866667 C6.31133333,9.22033333 6.01566667,9.421 6.01566667,9.421 C5.26233333,9.75266667 4.36333333,10.4246667 3.54166667,11.3396667 C2.62066667,12.3646667 1.79833333,13.6953333 1.389,15.1963333 C1.277,15.6073333 1.196,16.031 1.15266667,16.465 L0.776,16.465 C0.374,16.465 0.048,16.791 0.048,17.1926667 C0.048,17.5946667 0.374,17.9206667 0.776,17.9206667 L13.0986667,17.9206667 C13.5006667,17.9206667 13.8266667,17.5946667 13.8266667,17.1926667 C13.8263333,16.791 13.5006667,16.465 13.0986667,16.465 L13.0986667,16.465 Z M2.47033333,16.4923333 L1.892,16.4923333 C1.92166667,16.023 1.97666667,15.5933333 2.053,15.1963333 C2.273,14.054 2.67366667,13.1896667 3.18666667,12.4753333 C3.47733333,12.0703333 3.80133333,11.6873333 4.14033333,11.3396667 C4.80733333,10.6553333 5.88879069,10.1021427 6.19133333,9.82066667 C6.49387598,9.53919067 6.65833333,9.39266667 6.65833333,8.997 C6.65833333,8.60133333 6.45611593,8.47363293 6.03570577,8.2112428 C5.61529562,7.94885266 4.034,6.69966667 3.17433333,5.49566667 C2.488,4.53433333 2.00533333,3.328 1.891,1.50166667 L11.982,1.50166667 C11.8663333,3.322 11.378,4.52866667 10.687,5.49133333 C9.82466667,6.69266667 8.52740499,7.75976575 7.89733907,8.12268078 C7.26727316,8.48559582 7.22133333,8.61 7.22133333,8.98333333 C7.22133333,9.35666667 7.41784912,9.52330154 7.89733907,9.82066691 C8.37682903,10.1180323 9.08133333,10.6486667 9.75266667,11.3393333 C10.0873333,11.6833333 10.4066667,12.0626667 10.6933333,12.4633333 C11.2053333,13.179 11.6043333,14.0463333 11.823,15.196 C11.8983333,15.5926667 11.9523333,16.0223333 11.9816667,16.492 L11.4053333,16.492 C4.14033338,16.4920002 5.86059567,16.4920002 2.47033333,16.4923333 Z" id="Shape" fill="transparent"></path>
			
	<g id="sand">
        <path d="M7.00695799,10.3484497 C7.00695799,10.3484497 6.27532958,10.4129639 7.00695799,10.3484497 C7.73858641,10.2839355 7.00695799,10.3484497 7.00695799,10.3484497 C7.00695799,10.3484497 7.78173827,9.99768063 7.09265135,10.548584 C6.40356444,11.0994873 7.09265137,10.548584 7.09265137,10.548584 L7.09265137,10.5493774 L11.4924319,16.4705197 L2.52148436,16.4705197 L6.87243652,10.5493774 L6.80957031,10.548584 C6.80957031,10.548584 7.1925659,10.737854 6.87243651,10.548584 C6.37234656,10.2529159 7.00695799,10.3484497 7.00695799,10.3484497 Z" id="Path-26" fill="#C62626" sketch:type="MSShapeGroup">
                                
                <animate 
                            attributeName="d" 
                dur=${e} 
                repeatCount="once"
                keyTimes="0;
                        .01;
                        .2;
                        .4;
                        .7;
                        .8;
                        .99;
                        1"
                        
                values="M2.33630371,3.07006836 C2.33630371,3.07006836 5.43261719,3.33813477 6.80957031,3.33813477 C8.18652344,3.33813477 11.3754883,3.07006836 11.3754883,3.07006836 C11.3754883,3.07006836 10.8122559,4.96514893 9.58630371,6.16516113 C8.36035156,7.36517334 7.09265137,8.2623291 7.09265137,8.2623291 L7.09265137,8.35028076 L7.09265137,8.46459961 L6.87243652,8.46459961 L6.87243652,8.35028076 L6.80957031,8.2623291 C6.80957031,8.2623291 4.9704053,7.27703707 3.96130371,5.96057129 C2.5045166,4.06005859 2.33630371,3.07006836 2.33630371,3.07006836 Z;
    
                                            
                                                                    M2.375,3.11462402 C2.375,3.11462402 5.71569824,3.44421387 7.09265137,3.44421387 C8.46960449,3.44421387 11.4150391,3.31262207 11.4150391,3.31262207 C11.4150391,3.31262207 10.8122559,4.96514893 9.58630371,6.16516113 C8.36035156,7.36517334 7.09265137,8.2623291 7.09265137,8.2623291 L7.09265137,15.5496216 L7.09265137,16.47052 L6.87243652,16.47052 L6.87243652,15.5496216 L6.80957031,8.2623291 C6.80957031,8.2623291 4.9704053,7.27703707 3.96130371,5.96057129 C2.5045166,4.06005859 2.375,3.11462402 2.375,3.11462402 Z;
                                            
                                                                    M2.49230957,3.31262207 C2.49230957,3.31262207 5.71569824,3.66851807 7.09265137,3.66851807 C8.46960449,3.66851807 11.3153076,3.53222656 11.3153076,3.53222656 C11.3153076,3.53222656 10.8122559,4.96514893 9.58630371,6.16516113 C8.36035156,7.36517334 7.09265137,8.2623291 7.09265137,8.2623291 L7.09265137,15.149231 L7.9152832,16.47052 L6.10144043,16.47052 L6.87243652,15.149231 L6.80957031,8.2623291 C6.80957031,8.2623291 4.9704053,7.27703707 3.96130371,5.96057129 C2.5045166,4.06005859 2.49230957,3.31262207 2.49230957,3.31262207 Z;
                                    
                                                M2.98474121,4.37164307 C2.98474121,4.37164307 5.49548338,4.7074585 6.87243651,4.7074585 C8.24938963,4.7074585 10.8119509,4.64428711 10.8119509,4.64428711 C10.8119509,4.64428711 10.8122559,4.96514893 9.58630371,6.16516113 C8.36035156,7.36517334 7.09265137,8.2623291 7.09265137,8.2623291 L7.09265137,12.5493774 L9.36248779,16.47052 L4.5581665,16.47052 L6.87243652,12.5493774 L6.80957031,8.2623291 C6.80957031,8.2623291 4.9704053,7.27703707 3.96130371,5.96057129 C2.5045166,4.06005859 2.98474121,4.37164307 2.98474121,4.37164307 Z;
                                            
                                            M4.49743651,6.36560059 C4.49743651,6.36560059 5.63000487,6.72412109 7.00695799,6.72412109 C8.38391112,6.72412109 9.56188963,6.36560059 9.56188963,6.36560059 C9.56188963,6.36560059 9.48870848,6.54571533 8.79962157,7.09661865 C8.11053465,7.64752197 7.09265137,8.2623291 7.09265137,8.2623291 L7.09265137,10.5493774 L11.4924319,16.4705197 L2.52148436,16.4705197 L6.87243652,10.5493774 L6.80957031,8.2623291 C6.80957031,8.2623291 6.01727463,8.16043491 4.82800292,6.81622307 C4.42932128,6.36560059 4.49743651,6.36560059 4.49743651,6.36560059 Z;
                                            
                                            M5.87017821,7.51904297 C5.87017821,7.51904297 6.14080809,7.70904542 6.87243651,7.64453126 C7.60406493,7.5800171 7.47180174,7.51904297 7.47180174,7.51904297 C7.47180174,7.51904297 8.51336669,7.23876953 7.82427977,7.78967285 C7.13519286,8.34057617 7.09265137,8.2623291 7.09265137,8.2623291 L7.09265137,10.5493774 L11.4924319,16.4705197 L2.52148436,16.4705197 L6.87243652,10.5493774 L6.80957031,8.2623291 C6.80957031,8.2623291 6.66632079,8.14239502 6.34619139,7.953125 C5.84610144,7.65745695 5.87017821,7.51904297 5.87017821,7.51904297 Z;
                                            
                                            M7.00695799,8.06219482 C7.00695799,8.06219482 6.27532958,8.12670898 7.00695799,8.06219482 C7.73858641,7.99768066 7.00695799,8.06219482 7.00695799,8.06219482 C7.00695799,8.06219482 7.78173827,7.71142576 7.09265135,8.26232908 C6.40356444,8.8132324 7.09265137,8.2623291 7.09265137,8.2623291 L7.09265137,10.5493774 L11.4924319,16.4705197 L2.52148436,16.4705197 L6.87243652,10.5493774 L6.80957031,8.2623291 C6.80957031,8.2623291 7.1925659,8.45159912 6.87243651,8.2623291 C6.37234656,7.96666105 7.00695799,8.06219482 7.00695799,8.06219482 Z;
                                            
                                            M7.00695799,10.3484497 C7.00695799,10.3484497 6.27532958,10.4129639 7.00695799,10.3484497 C7.73858641,10.2839355 7.00695799,10.3484497 7.00695799,10.3484497 C7.00695799,10.3484497 7.78173827,9.99768063 7.09265135,10.548584 C6.40356444,11.0994873 7.09265137,10.548584 7.09265137,10.548584 L7.09265137,10.5493774 L11.4924319,16.4705197 L2.52148436,16.4705197 L6.87243652,10.5493774 L6.80957031,10.548584 C6.80957031,10.548584 7.1925659,10.737854 6.87243651,10.548584 C6.37234656,10.2529159 7.00695799,10.3484497 7.00695799,10.3484497 Z;"
                                />
                                
                                <animate 
                            attributeName="fill" 
                dur=${e} 
                repeatCount="once"
                keyTimes="0;
                        .5;
                        1"
                        
                values="#e2cba5;#e2cba5;#C62626;"
                                />
                </path>
            </g>
        </g>
    </svg></div>
    <div class="timerNumbers" id="timerNumbers">0:00</div>`}function I(e){e.onclick=async function(){e.disabled||(A.Minutes===0&&A.Seconds>0?A.TimeSet=A.Seconds:A.Minutes>0&&A.Seconds===0?A.TimeSet=A.Minutes*60:A.TimeSet=A.Minutes*60+A.Seconds,A.TimeSet>0&&A.Started!==!0&&(A.Started=!0,A.StartButton.disabled=!0,A.PauseButton.disabled=!1,A.ResetButton.disabled=!0,A.TimerInterval=setInterval(async function(){A.TimeSet--,A.Seconds--,A.Seconds<=-1&&(A.Minutes--,A.Seconds=60-1),S(!1),A.TimeSet<=0&&(clearInterval(A.TimerInterval),A.TimerArea.innerText="Ding!",A.StartButton.disabled=!0,A.PauseButton.disabled=!0,A.ResetButton.disabled=!1,N.play()),A.TimeSet%5===0&&A.TimerArea.innerText!=="Ding!"?(await c(A.TimerArea.innerText),await v(!0)):A.TimerArea.innerText==="Ding!"&&(await p(),setTimeout(()=>{A.ResetButton.click()},2e3))},A.Duration),await v()))}}function L(e){e.onclick=async function(){if(e.disabled)return;A.TimerArea.innerText="0:00",A.StartButton.disabled=!1,A.PauseButton.disabled=!0,A.Started=!1,A.Minutes=0,A.Seconds=0,A.TimeSet=0;let t={reset:!0,start:!1,visible:A.Visible,ownerId:A.CurrentId},n={};n[`${s.EXTENSIONID}/metadata_timeritem`]={TimeBomb:t},await a.broadcast.sendMessage(s.BROADCASTID,n),await b()}}function U(e){e.onclick=async function(){if(!A.Started||e.disabled)return;clearInterval(A.TimerInterval),A.StartButton.disabled=!1,A.PauseButton.disabled=!0,A.ResetButton.disabled=!1,A.Started=!1;let t={start:!1,reset:!1,visible:A.Visible,ownerId:A.CurrentId},n={};n[`${s.EXTENSIONID}/metadata_timeritem`]={TimeBomb:t},await a.broadcast.sendMessage(s.BROADCASTID,n),await c("Paused..")}}function W(e){e.checked=A.Visible,e.onchange=async function(){A.Visible=A.VisibleToggle.checked,A.VisibleLabel.innerText=A.Visible?"Visible":"Hidden",await a.room.setMetadata({[`${s.EXTENSIONID}/visible`]:A.Visible})}}function f(e,t){e.onclick=async function(){A.Minutes+=t,A.Started&&(A.TimeSet+=t*60,await v()),S(!0)},e.oncontextmenu=async function(n){n.preventDefault(),!(A.Minutes<t)&&(A.Minutes-=t,A.Started&&(A.TimeSet-=t*60,await v()),S(!1))}}function h(e){e.onclick=async function(){A.Seconds+=10,A.Started&&(A.TimeSet+=10,await v()),A.Seconds>=60&&(A.Seconds=A.Seconds-60,A.Minutes+=1),S(!0)},e.oncontextmenu=async function(t){t.preventDefault(),!(A.Seconds<11&&A.Minutes===0)&&(A.Seconds-=10,A.Started&&(A.TimeSet-=10,await v()),A.Seconds<=0&&(A.Seconds=A.Seconds+60,A.Minutes-=1),S(!1))}}function S(e){A.Seconds==0||A.Seconds<10&&!e?A.TimerArea.innerText=`${A.Minutes}:0${A.Seconds}`:A.TimerArea.innerText=`${A.Minutes}:${A.Seconds}`}async function v(e){A.ZuluStartTime=new Date(Date.now()).toISOString(),A.ZuluEndTime=new Date(Date.now()+A.TimeSet*1e3).toISOString();let t={startTime:A.ZuluStartTime,endTime:A.ZuluEndTime,start:!0,reset:!1,visible:A.Visible,ownerId:A.CurrentId,auxillary:e},n={};n[`${s.EXTENSIONID}/metadata_timeritem`]={TimeBomb:t},await a.broadcast.sendMessage(s.BROADCASTID,n)}const N=new Audio(s.DING);class C{static EXTENSIONWHATSNEW="com.battle-system.journal-whatsnew";static CHECKREGISTRATION="https://vrwtdtmnbyhaehtitrlb.supabase.co/functions/v1/patreon-check";static ANONAUTH="Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0"}let V=!1;function Z(){const e="com.battle-system.ticker-whatsnew",t=document.createElement("img");return t.id="whatsNewButton",t.style.cursor="pointer",t.setAttribute("class","icon"),t.classList.add("clickable"),t.setAttribute("title","Whats New?"),t.setAttribute("src","/w-info.svg"),t.onclick=async function(){await a.modal.open({id:e,url:`/src/whatsnew/bswhatsnew.html?subscriber=${V}`,height:500,width:350})},t}async function X(){const e=await a.player.getId();try{const t=window.location.origin.includes("localhost")?"eternaldream":"",n={owlbearid:e},u={method:"POST",headers:new Headers({"Content-Type":"application/json",Authorization:C.ANONAUTH,"x-manuel":t}),body:JSON.stringify(n)},i=await fetch(C.CHECKREGISTRATION,u);if(!i.ok){const m=await i.json();console.error("Error:",m);return}(await i.json()).Data==="OK"?V=!0:console.log("Not Registered")}catch(t){console.error("Error:",t)}}class M{Started;Visible;Minutes;Seconds;Duration;TimeSet;TimerInterval;ZuluStartTime;ZuluEndTime;TargetEndTime;CurrentTheme;CurrentRole;CurrentId;VisibleToggle;VisibleLabel;TenMinuteButton;FiveMinuteButton;OneMinuteButton;TenSecondButton;StartButton;PauseButton;ResetButton;TimerArea;ActiveArea;InactiveArea;Broadcast;constructor(){this.Started=!1,this.Visible=!0,this.Minutes=0,this.Seconds=0,this.Duration=1e3,this.TimeSet=0,this.TimerInterval=9999,this.ZuluStartTime="",this.ZuluEndTime="",this.TargetEndTime="",this.CurrentTheme="DARK",this.CurrentRole="GM",this.CurrentId="",this.ActiveArea=document.getElementById("activeTimer"),this.InactiveArea=document.getElementById("inactiveTimer"),this.TimerArea=document.getElementById("timerArea"),this.VisibleToggle=document.getElementById("visibleToggle"),this.VisibleLabel=document.getElementById("visibleToggle"),this.TenMinuteButton=document.getElementById("tenMinButton"),this.FiveMinuteButton=document.getElementById("fiveMinButton"),this.OneMinuteButton=document.getElementById("oneMinButton"),this.TenSecondButton=document.getElementById("tenSecButton"),this.StartButton=document.getElementById("startButton"),this.PauseButton=document.getElementById("pauseButton"),this.ResetButton=document.getElementById("resetButton")}async Initialize(){this.CurrentTheme=(await a.theme.getTheme()).mode,B(this.CurrentTheme,document),this.CurrentRole=await a.player.getRole(),this.CurrentId=await a.player.getId();const t=await a.room.getMetadata();this.Visible=t[`${s.EXTENSIONID}/visible`]??!0}FindGMElements(){this.TimerArea=document.getElementById("timerArea"),this.VisibleToggle=document.getElementById("visibleToggle"),this.VisibleLabel=document.getElementById("visibleToggle"),this.TenMinuteButton=document.getElementById("tenMinButton"),this.FiveMinuteButton=document.getElementById("fiveMinButton"),this.OneMinuteButton=document.getElementById("oneMinButton"),this.TenSecondButton=document.getElementById("tenSecButton"),this.StartButton=document.getElementById("startButton"),this.PauseButton=document.getElementById("pauseButton"),this.ResetButton=document.getElementById("resetButton"),document.getElementById("whatsNew").appendChild(Z()),X()}FindPlayerElements(){this.ActiveArea=document.getElementById("activeTimer"),this.InactiveArea=document.getElementById("inactiveTimer")}async LoadGM(){s.APPELEMENT.innerHTML=s.GMINTERFACE,this.FindGMElements(),await a.action.setHeight(240),I(this.StartButton),L(this.ResetButton),U(this.PauseButton),f(this.OneMinuteButton,1),f(this.FiveMinuteButton,5),f(this.TenMinuteButton,10),h(this.TenSecondButton),W(this.VisibleToggle),this.Broadcast=a.broadcast.onMessage(s.BROADCASTID,async t=>{const i=t.data[`${s.EXTENSIONID}/metadata_timeritem`]?.TimeBomb;if(!(!i||i.ownerId===this.CurrentId)&&!(i.auxillary===!0&&A.Started)){if(i.startTime&&i.endTime){const d=new Date(i.startTime);let r=new Date(i.endTime).getTime()-d.getTime();if(r<3)return;const o=Math.round(r/1e3),l=Math.floor(o/60),T=o-l*60;A.Minutes=l,A.Seconds=T,A.Minutes===0&&A.Seconds>0?A.TimeSet=A.Seconds:A.Minutes>0&&A.Seconds===0?A.TimeSet=A.Minutes*60:A.TimeSet=A.Minutes*60+A.Seconds,A.TimeSet>0&&A.Started!==!0&&(A.Started=!0,A.StartButton.disabled=!0,A.PauseButton.disabled=!1,A.ResetButton.disabled=!0,isNaN(A.TimerInterval)||clearInterval(A.TimerInterval),A.TimerInterval=setInterval(async function(){A.TimeSet--,A.Seconds--,A.Seconds<=-1&&(A.Minutes--,A.Seconds=60-1),S(!1),A.TimeSet<=0&&(clearInterval(A.TimerInterval),A.TimerArea.innerText="Ding!",A.StartButton.disabled=!0,A.PauseButton.disabled=!0,A.ResetButton.disabled=!1),A.TimeSet%5===0&&A.TimerArea.innerText!=="Ding!"?await c(A.TimerArea.innerText):A.TimerArea.innerText==="Ding!"&&(await p(),isNaN(A.TimerInterval)||clearInterval(A.TimerInterval),setTimeout(()=>{A.ResetButton.click()},2e3))},A.Duration))}i.start===!1&&i.reset===!1&&A.Started===!0&&(clearInterval(A.TimerInterval),A.StartButton.disabled=!1,A.PauseButton.disabled=!0,A.ResetButton.disabled=!1,A.Started=!1,await c("Paused..")),i.reset===!0&&i.start===!1&&A.Started===!1&&(isNaN(A.TimerInterval)||clearInterval(A.TimerInterval),A.TimerArea.innerText="0:00",A.StartButton.disabled=!1,A.PauseButton.disabled=!0,A.Started=!1,A.Minutes=0,A.Seconds=0,A.TimeSet=0,await b())}})}async LoadPlayer(){s.APPELEMENT.innerHTML=s.TEMPPLAYERFACE,this.FindPlayerElements(),await a.action.setHeight(75),this.ActiveArea.style.display=this.Visible?"flex":"none",this.InactiveArea.style.display=this.Visible?"none":"block",this.Broadcast=a.broadcast.onMessage(s.BROADCASTID,async t=>{const i=t.data[`${s.EXTENSIONID}/metadata_timeritem`]?.TimeBomb;if(i&&!(i.auxillary===!0&&A.Started)){if(i.startTime&&i.endTime&&i.endTime!=A.TargetEndTime&&i.start===!0){A.TargetEndTime=i.endTime;const d=new Date(i.startTime);let r=new Date(i.endTime).getTime()-d.getTime();if(r<3)return;let o=Math.round(r/1e3);this.ActiveArea.innerHTML=q(o+"s");const l=document.getElementById("timerNumbers");isNaN(A.TimerInterval)||clearInterval(A.TimerInterval),A.TimerInterval=setInterval(async function(){let T=Math.floor(o/60),g=o-T*60;o--,g--,g<=-1&&(T--,g=60-1),g<10?l.innerText=`${T}:0${g}`:l.innerText=`${T}:${g}`,o<=0&&(clearInterval(A.TimerInterval),l.innerText="Ding!"),o%5===0&&l.innerText!=="Ding!"?A.ActiveArea.style.display==="flex"?await c(l.innerText):await c("Tick tock.."):l.innerText==="Ding!"&&(isNaN(A.TimerInterval)||clearInterval(A.TimerInterval),await p()),A.UpdateNonVisibleMessage(o>0),A.Started=o>0},A.Duration)}if(i.start==!1&&i.reset==!1&&A.TargetEndTime!==void 0){const d=document.getElementById("timerNumbers").innerText;this.ActiveArea.innerHTML=`
                    <div class="timerPaused">⏳ ${d} ⌛</div>`,this.InactiveArea.innerText="Paused..",clearInterval(A.TimerInterval),await c("Paused..")}i.reset==!0&&A.TargetEndTime!==void 0&&(this.ActiveArea.innerHTML=`
                    <div class="timerNumbers">⏳...</div>`,this.UpdateNonVisibleMessage(!1),clearInterval(A.TimerInterval),await b())}}),this.ActiveArea.innerHTML=`
        <div class="timerNumbers">⏳...</div>`}UpdateNonVisibleMessage(t){this.InactiveArea.innerText=t?"Time is running out..":"Not Running"}async StartListeners(){a.theme.onChange(t=>{this.CurrentTheme=t.mode,B(t.mode,document)}),a.player.onChange(t=>{t.role!==this.CurrentRole&&(this.Broadcast(),this.CurrentRole=t.role,this.CurrentRole==="GM"?this.LoadGM():this.LoadPlayer())}),a.room.onMetadataChange(t=>{const n=t[`${s.EXTENSIONID}/visible`]??!0;this.Visible=n,this.CurrentRole==="PLAYER"?(this.ActiveArea.style.display=this.Visible?"flex":"none",this.InactiveArea.style.display=this.Visible?"none":"block"):this.VisibleToggle.checked=this.Visible}),a.action.onOpenChange(async t=>{t&&(await a.action.setBadgeText(void 0),await a.action.setBadgeBackgroundColor("#BB99FF"),await a.action.setIcon("/icon.svg"))})}}const A=new M;await a.onReady(async()=>{await A.Initialize(),await A.StartListeners(),A.CurrentRole==="GM"?await A.LoadGM():await A.LoadPlayer()});
